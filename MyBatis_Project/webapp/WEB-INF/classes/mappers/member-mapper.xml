<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberMapper">
	<!-- namespace: 해당 mapper 파일의 고유한 별칭 -->
	
	<!-- 
		*resultMap: 마이바티스의 핵심 기능 중 하나
					ResultSet으로부터 조회된 컬럼값을 하나씩 뽑아서 내가 지정한 VO 객체의 각 필드에 담는 (맵핑) JDBC 코드를 줄여주는 역할 수행
		
		<resultMap id="식별자" type="조회된결과를담아서반환하고자하는VO객체타입(풀클래스명)혹은별칭">
			<result column="조회결과를뽑고자하는DB컬럼명" property="해당결과를받고자하는필드명" />
			<result column="" property="" />
			<result column="" property="" />
			... 매칭시킬 만큼 지정!
		</resulMap>
		
		=> resultMap은 관례상 가장 상단에 쓰는 것을 권장
		=> property 속성에 작성하는 필드명은 내부적으로 setter 메소드에 의해 필드값이 대입되는 구조이므로 오타 주의!	 
	 -->
	 
	 <resultMap id="memberResultSet" type="member"> <!-- 별칭 사용! -->
	 	<result column="USER_NO" property="userNo" />
	 	<result column="USER_ID" property="userId" />
	 	<result column="USER_PWD" property="userPwd" />
	 	<result column="USER_NAME" property="userName" />
	 	<result column="EMAIL" property="email" />
	 	<result column="BIRTHDAY" property="birthday" />
	 	<result column="GENDER" property="gender" />
	 	<result column="PHONE" property="phone" />
	 	<result column="ADDRESS" property="address" />
	 	<result column="ENROLL_DATE" property="enrollDate" />
	 	<result column="MODIFY_DATE" property="modifyDate" />
	 	<result column="STATUS" property="status" />
	 </resultMap>
	
	<!--
		* DML (INSERT, UPDATE, DELETE) 문일 경우
		<insert id="각sql문들의식별자" parameterType="전달받을자바타입(풀클래스)혹은별칭">
			쿼리문 작성
		</insert>
		<update></update>
		<delete></delete> 
		
		=> parameterType 속성은 전달받을 값이 없다면 생략 가능(완성된 쿼리문일 경우)
		=> update, delete 태그도 마찬가지로 작성하면 됨 
		=> 기존의 ? 대신에 해당 sql문에 전달된 객체로부터 값을 꺼낼 때 #{필드명}을 이용!
		   (내부적으로 해당 getter 메소드가 호출된 꼴이 됨)
		     단일 변수값으로 구멍을 메꿀 경우 #{매개변수명}
		   HashMap에 담긴 값으로 구멍을 메꿀 경우 #{키값}
		=> DML 문의 경우 어차피 실행 결과가 처리된 행의 개수(int)이기 때문에
			resultType 또는 resultMap에 대한 속성은 안 써도 됨
	-->
	
	<!--
		별칭 지정 전(풀 클래스명)
		<insert id="insertMember" parameterType="com.kh.mybatis.member.model.vo.Member">
	-->
	<insert id="insertMember" parameterType="member">
		INSERT INTO MEMBER (USER_NO
	                  , USER_ID
	                  , USER_PWD
	                  , USER_NAME
	                  , EMAIL
	                  , BIRTHDAY
	                  , GENDER
	                  , PHONE
	                  , ADDRESS)
	            VALUES (SEQ_UNO.NEXTVAL
	                  , #{userId}
	                  , #{userPwd}
	                  , #{userName}
	                  , #{email}
	                  , #{birthday}
	                  , #{gender}
	                  , #{phone}
	                  , #{address})
     </insert>
     
     <!-- 
     	*SELECT문일 경우
     	<select id="각sql문들의 식별자" parameterType="전달받을자바타입(풀클래스명)혹은별칭"
     		resultType="조회결과를 반환하고자하는자바타입(내장타입)" 또는
     		resultMap="조회결과를뽑아서맵핑할resultMap의id값">
     		쿼리문 작성
     	</select>
     	
     	=> parameterType 속성은 전달받을 값이 없다면 생략 가능(완성된 쿼리문일 경우)
     	=> select 태그의 경우 반드시 resultType(자바에서 제공하는 자료형으로 가공하고자 할 때)
     	     또는 resultMap(내가 만든 VO 클래스로 가공하고자 할 때) 으로 결과값에 대한 타입을 지정해야 함
     -->
     
     <select id="loginMember" parameterType="member" resultMap="memberResultSet">
     	SELECT *
		FROM MEMBER
		WHERE USER_ID = #{userId}
		    AND USER_PWD = #{userPwd}
		    AND STATUS = 'Y'
     </select>
     
     
	
</mapper>